// FROM ROOT FILE OF CRA:

// import React from 'react';
// import { render } from 'react-dom';
// import { BrowserRouter } from 'react-router-dom';
// import { ApolloProvider } from '@apollo/react-hooks';
// import { ApolloClient } from 'apollo-client';
// import { createHttpLink } from 'apollo-link-http';
// import { InMemoryCache } from 'apollo-cache-inmemory';
// import CssBaseline from '@material-ui/core/CssBaseline';

// import App from './components/app';
// import registerServiceWorker from './registerServiceWorker';
// import './compiled/index.css';

// const client = new ApolloClient({
//   link: createHttpLink({ uri: 'http://localhost:4000' }),
//   cache: new InMemoryCache(),
// });

// render(
//   <BrowserRouter>
//     <>
//       <CssBaseline />
//       <ApolloProvider client={client}>
//         <App />
//       </ApolloProvider>
//     </>
//   </BrowserRouter>,
//   document.getElementById('root'),
// );

// registerServiceWorker();

import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  )
}
