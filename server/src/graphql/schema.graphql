scalar Date
scalar DateTime
scalar Time

type Query {
  events: [Event]
  venues: [Venue]
}

type Mutation {
  createEvent(input: EventInput): Event
  createVenue(input: VenueInput): Venue
  purge: Boolean
}

input EventInput {
  date: Date!
  faceValue: Float
  genre: String!
  name: String!
  subGenre: String
  wasOpener: Boolean
}

type Event {
  date: Date!
  faceValue: Float
  genre: String!
  id: ID!
  name: String!
  subGenre: String
  venue: Venue
  wasOpener: Boolean
}

input VenueInput {
  city: String!
  name: String!
  state: String!
}

type Venue {
  city: String!
  id: ID!
  name: String!
  state: String!
}